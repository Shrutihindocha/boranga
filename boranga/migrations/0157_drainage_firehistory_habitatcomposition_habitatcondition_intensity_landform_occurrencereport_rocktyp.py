# Generated by Django 3.2.20 on 2023-08-09 07:47

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('boranga', '0156_auto_20230808_1038'),
    ]

    operations = [
        migrations.CreateModel(
            name='Drainage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, unique=True)),
            ],
            options={
                'verbose_name': 'Drainage',
                'verbose_name_plural': 'Drainages',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Intensity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, unique=True)),
            ],
            options={
                'verbose_name': 'Intensity',
                'verbose_name_plural': 'Intensities',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='LandForm',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, unique=True)),
            ],
            options={
                'verbose_name': 'Land Form',
                'verbose_name_plural': 'Land Forms',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='RockType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, unique=True)),
            ],
            options={
                'verbose_name': 'Rock Type',
                'verbose_name_plural': 'Rock Types',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='SoilColour',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, unique=True)),
            ],
            options={
                'verbose_name': 'Soil Colour',
                'verbose_name_plural': 'Soil Colours',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='SoilCondition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, unique=True)),
            ],
            options={
                'verbose_name': 'Soil Condition',
                'verbose_name_plural': 'Soil Conditions',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='SoilType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, unique=True)),
            ],
            options={
                'verbose_name': 'Soil Type',
                'verbose_name_plural': 'Soil Types',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='OccurrenceReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customer_status', models.CharField(choices=[('draft', 'Draft'), ('with_assessor', 'Under Review'), ('with_approver', 'Under Review'), ('amendment_required', 'Amendment Required'), ('approved', 'Approved'), ('declined', 'Declined'), ('discarded', 'Discarded'), ('closed', 'DeListed'), ('partially_approved', 'Partially Approved'), ('partially_declined', 'Partially Declined')], default='draft', max_length=40, verbose_name='Customer Status')),
                ('proposal_type', models.CharField(choices=[('new_proposal', 'New Application'), ('amendment', 'Amendment'), ('renewal', 'Renewal'), ('external', 'External')], default='new_proposal', max_length=40, verbose_name='Application Status Type')),
                ('occurrence_report_number', models.CharField(blank=True, default='', max_length=9)),
                ('reported_date', models.DateTimeField(auto_now_add=True)),
                ('effective_from', models.DateTimeField(blank=True, null=True)),
                ('effective_to', models.DateTimeField(blank=True, null=True)),
                ('submitter', models.IntegerField(null=True)),
                ('lodgement_date', models.DateTimeField(blank=True, null=True)),
                ('assigned_officer', models.IntegerField(null=True)),
                ('assigned_approver', models.IntegerField(null=True)),
                ('approved_by', models.IntegerField(null=True)),
                ('processing_status', models.CharField(choices=[('draft', 'Draft'), ('with_assessor', 'With Assessor'), ('with_referral', 'With Referral'), ('with_approver', 'With Approver'), ('awaiting_applicant_respone', 'Awaiting Applicant Response'), ('awaiting_assessor_response', 'Awaiting Assessor Response'), ('awaiting_responses', 'Awaiting Responses'), ('approved', 'Approved'), ('declined', 'Declined'), ('discarded', 'Discarded'), ('closed', 'DeListed'), ('partially_approved', 'Partially Approved'), ('partially_declined', 'Partially Declined')], default='draft', max_length=30, verbose_name='Processing Status')),
                ('prev_processing_status', models.CharField(blank=True, max_length=30, null=True)),
                ('review_status', models.CharField(choices=[('not_reviewed', 'Not Reviewed'), ('awaiting_amendments', 'Awaiting Amendments'), ('amended', 'Amended'), ('accepted', 'Accepted')], default='not_reviewed', max_length=30, verbose_name='Review Status')),
                ('proposed_decline_status', models.BooleanField(default=False)),
                ('deficiency_data', models.TextField(blank=True, null=True)),
                ('assessor_data', models.TextField(blank=True, null=True)),
                ('approver_comment', models.TextField(blank=True)),
                ('internal_application', models.BooleanField(default=False)),
                ('community', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='occurrence_report', to='boranga.community')),
                ('group_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='boranga.grouptype')),
                ('species', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='occurrence_report', to='boranga.species')),
            ],
        ),
        migrations.CreateModel(
            name='HabitatCondition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pristine', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)])),
                ('excellent', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)])),
                ('very_good', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)])),
                ('good', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)])),
                ('dehydrated', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)])),
                ('completely_dehydrated', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)])),
                ('occurrence_report', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='habitat_condition', to='boranga.occurrencereport', unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='HabitatComposition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('loose_rock_percent', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)])),
                ('water_quality', models.CharField(blank=True, max_length=500, null=True)),
                ('habitat_notes', models.CharField(blank=True, max_length=1000, null=True)),
                ('drainage', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='boranga.drainage')),
                ('occurrence_report', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='habitat_composition', to='boranga.occurrencereport', unique=True)),
                ('rock_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='boranga.rocktype')),
                ('soil_colour', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='boranga.soilcolour')),
                ('soil_condition', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='boranga.soilcondition')),
                ('soil_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='boranga.soiltype')),
            ],
        ),
        migrations.CreateModel(
            name='FireHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_fire_estimate', models.DateField(blank=True, null=True)),
                ('comment', models.CharField(blank=True, max_length=1000, null=True)),
                ('intensity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='boranga.rocktype')),
                ('occurrence_report', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='fire_history', to='boranga.occurrencereport', unique=True)),
            ],
        ),
    ]
